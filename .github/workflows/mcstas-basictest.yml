name: mcstas-basictest
on:
  push:
  pull_request:
  schedule:
    - cron: '30 23 * * 0'  # 23:30 every Sunday

  workflow_dispatch:
    inputs:
      manual-debugging:
        type: boolean
        description: Launch manual debugging tmate for inspection (automatic in case of errors)
        default: false

jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        include:
          - { os: ubuntu-24.04,   CC: gcc-13,   CXX: g++-13,     python: '3.12', mpi: 'openmpi' }
          - { os: ubuntu-24.04,   CC: clang,    CXX: clang++,    python: '3.12', mpi: 'openmpi' }
          - { os: ubuntu-22.04,   CC: clang,    CXX: clang++,    python: '3.11', mpi: 'openmpi' }
          - { os: ubuntu-22.04,   CC: gcc-12,   CXX: g++-12,     python: '3.11', mpi: 'openmpi' }
          - { os: macos-13,       CC: clang,    CXX: clang++,    python: "3.11", mpi: 'mpich'   }
          - { os: macos-14,       CC: clang,    CXX: clang++,    python: "3.12", mpi: 'mpich'   }
          - { os: macos-15,       CC: clang,    CXX: clang++,    python: "3.13", mpi: 'mpich'   }
          - { os: windows-2022,   CC: cl.exe,   CXX: cl.exe,     python: "3.13", mpi: 'msmpi'   }
          - { os: windows-2022,   CC: gcc.exe,  CXX: g++.exe,    python: "3.13", mpi: 'msmpi'   }
          - { os: windows-2025,   CC: cl.exe,   CXX: cl.exe,     python: "3.13", mpi: 'msmpi'   }
          - { os: windows-11-arm, CC: cl.exe,   CXX: cl.exe,     python: "3.13", mpi: 'msmpi'   }

    name: ${{ matrix.os }}.${{ matrix.CC }}.${{ matrix.mpi }}.python-${{ matrix.python }}
    runs-on: ${{ matrix.os }}
    env:
      CC: ${{ matrix.CC }}
      CXX: ${{ matrix.CXX }}
    defaults:
      run:
        shell: bash -el {0}

    steps:
    - name: Checkout
      uses: actions/checkout@v5
      with:
        path: src
        fetch-depth: 2

    - name: Setup python
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python }}

    - name: Setup VS in shell Intel
      if: runner.os == 'Windows' && matrix.os != 'windows-11-arm'
      uses: ilammy/msvc-dev-cmd@v1

    - name: Setup VS in shell arm64
      if: runner.os == 'Windows' && matrix.os == 'windows-11-arm'
      uses: ilammy/msvc-dev-cmd@v1
      with:
        arch: arm64

    - name: Setup MPI
      uses: mpi4py/setup-mpi@v1
      with:
        mpi: ${{ matrix.mpi }}

    - name: Setup (Linux)
      id: setup-linux
      if: runner.os == 'Linux'
      run: |
           echo No dependencies needed here

    - name: Setup (macOS)
      id: setup-macos
      if: runner.os == 'macOS'
      run: |
           brew install bison flex gfortran gsl

    # - name: 'Tar output files'
    #   id: tar-package
    #   if: always()
    #   run: |
    #        set -e
    #        set -u
    #        set -x
    #        tar cvfz mcstas-${{ matrix.os }}.${{ matrix.CC }}.${{ matrix.mpi }}.python-${{ matrix.python }}_output.tgz run_*

    # - name: 'Upload Artifact'
    #   id: tar-upload
    #   uses: actions/upload-artifact@v4
    #   if: always()
    #   with:
    #     name: mcstas-artefacts-${{ matrix.os }}.${{ matrix.CC }}.${{ matrix.mpi }}.python-${{ matrix.python }}
    #     path: "mcstas-${{ matrix.os }}.${{ matrix.CC }}.${{ matrix.mpi }}.python-${{ matrix.python }}_output.tgz"

    - name: Setup tmate session for manual debugging
      uses: mxschmitt/action-tmate@v3
      if: always() && (inputs.manual-debugging == true)
      with:
        limit-access-to-actor: true
